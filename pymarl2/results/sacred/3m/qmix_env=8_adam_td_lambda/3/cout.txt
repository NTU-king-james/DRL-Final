[INFO 14:25:38] pymarl Running command 'my_main'
[INFO 14:25:38] pymarl Started run with ID "3"
[DEBUG 14:25:38] pymarl Starting Heartbeat
[DEBUG 14:25:38] my_main Started
[INFO 14:25:38] my_main Experiment Parameters:
[INFO 14:25:38] my_main 

{   'action_selector': 'epsilon_greedy',
    'agent': 'n_rnn',
    'agent_output_type': 'q',
    'batch_size': 128,
    'batch_size_run': 8,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'critic_lr': 0.0005,
    'env': 'sc2',
    'env_args': {   'continuing_episode': False,
                    'debug': False,
                    'difficulty': '7',
                    'game_version': None,
                    'heuristic_ai': False,
                    'heuristic_rest': False,
                    'map_name': '3m',
                    'move_amount': 2,
                    'obs_all_health': True,
                    'obs_instead_of_state': False,
                    'obs_last_action': False,
                    'obs_own_health': True,
                    'obs_pathing_grid': False,
                    'obs_terrain_height': False,
                    'obs_timestep_number': False,
                    'replay_dir': '',
                    'replay_prefix': '',
                    'reward_death_value': 10,
                    'reward_defeat': 0,
                    'reward_negative_scale': 0.5,
                    'reward_only_positive': True,
                    'reward_scale': True,
                    'reward_scale_rate': 20,
                    'reward_sparse': False,
                    'reward_win': 200,
                    'seed': 408322433,
                    'state_last_action': True,
                    'state_timestep_number': False,
                    'step_mul': 8},
    'epsilon_anneal_time': 100000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'gain': 0.01,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hypernet_embed': 64,
    'label': 'default_label',
    'learner': 'nq_learner',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 10000,
    'lr': 0.001,
    'mac': 'n_mac',
    'mixer': 'qmix',
    'mixing_embed_dim': 32,
    'name': 'qmix_env=8_adam_td_lambda',
    'obs_agent_id': True,
    'obs_last_action': True,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'optimizer': 'adam',
    'per_alpha': 0.6,
    'per_beta': 0.4,
    'q_lambda': False,
    'repeat_id': 1,
    'return_priority': False,
    'rnn_hidden_dim': 64,
    'run': 'default',
    'runner': 'parallel',
    'runner_log_interval': 10000,
    'save_model': False,
    'save_model_interval': 2000000,
    'save_replay': False,
    'seed': 408322433,
    't_max': 10050000,
    'target_update_interval': 200,
    'td_lambda': 0.6,
    'test_greedy': True,
    'test_interval': 10000,
    'test_nepisode': 32,
    'use_cuda': True,
    'use_layer_norm': False,
    'use_orthogonal': False,
    'use_per': False,
    'use_tensorboard': False}

[DEBUG 14:25:38] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:38] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "test"}], "max_tokens": 5}' message='Post details'
[DEBUG 14:25:38] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 14:25:38] urllib3.connectionpool Starting new HTTP connection (1): localhost:11434
[DEBUG 14:25:38] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:38] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "test"}], "max_tokens": 5}' message='Post details'
[DEBUG 14:25:38] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 14:25:38] urllib3.connectionpool Starting new HTTP connection (1): localhost:11434
[DEBUG 14:25:38] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:38] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "test"}], "max_tokens": 5}' message='Post details'
[DEBUG 14:25:38] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 14:25:38] urllib3.connectionpool Starting new HTTP connection (1): localhost:11434
[DEBUG 14:25:38] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:38] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "test"}], "max_tokens": 5}' message='Post details'
[DEBUG 14:25:38] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 14:25:38] urllib3.connectionpool Starting new HTTP connection (1): localhost:11434
[DEBUG 14:25:38] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:38] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "test"}], "max_tokens": 5}' message='Post details'
[DEBUG 14:25:38] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 14:25:38] urllib3.connectionpool Starting new HTTP connection (1): localhost:11434
[DEBUG 14:25:38] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:38] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "test"}], "max_tokens": 5}' message='Post details'
[DEBUG 14:25:38] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 14:25:38] urllib3.connectionpool Starting new HTTP connection (1): localhost:11434
[DEBUG 14:25:38] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:38] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "test"}], "max_tokens": 5}' message='Post details'
[DEBUG 14:25:38] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 14:25:38] urllib3.connectionpool Starting new HTTP connection (1): localhost:11434
[DEBUG 14:25:38] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:38] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "test"}], "max_tokens": 5}' message='Post details'
[DEBUG 14:25:38] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 14:25:38] urllib3.connectionpool Starting new HTTP connection (1): localhost:11434
[DEBUG 14:25:38] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 309
[DEBUG 14:25:38] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:25:38] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 309
[DEBUG 14:25:38] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:25:38] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 309
[DEBUG 14:25:38] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:25:38] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 309
[DEBUG 14:25:38] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:25:38] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 304
[DEBUG 14:25:38] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:25:38] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 309
[DEBUG 14:25:38] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:25:38] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 309
[DEBUG 14:25:38] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:25:38] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 311
[DEBUG 14:25:38] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[INFO 14:25:39] my_main Beginning training for 10050000 timesteps
[INFO 14:25:39] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 32825 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-e1m6gu8k/
[INFO 14:25:39] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 46737 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-1yupb_q5/
[INFO 14:25:39] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 37421 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-02c8w89n/
[INFO 14:25:39] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 39315 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-dzbuun2i/
[INFO 14:25:39] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 41917 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-fswmrrn8/
[INFO 14:25:39] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 37377 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-u5gzs987/
[INFO 14:25:39] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 39677 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-legzltgi/
[INFO 14:25:39] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 41595 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-mjcirkre/
[INFO 14:25:39] absl Connecting to: ws://127.0.0.1:41917/sc2api, attempt: 0, running: True
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 41917 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-fswmrrn8/'
[INFO 14:25:39] absl Connecting to: ws://127.0.0.1:37421/sc2api, attempt: 0, running: True
[INFO 14:25:39] absl Connecting to: ws://127.0.0.1:39315/sc2api, attempt: 0, running: True
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 37421 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-02c8w89n/'
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 39315 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-dzbuun2i/'
[INFO 14:25:39] absl Connecting to: ws://127.0.0.1:37377/sc2api, attempt: 0, running: True
[INFO 14:25:39] absl Connecting to: ws://127.0.0.1:46737/sc2api, attempt: 0, running: True
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 37377 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-u5gzs987/'
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 46737 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-1yupb_q5/'
[INFO 14:25:39] absl Connecting to: ws://127.0.0.1:32825/sc2api, attempt: 0, running: True
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 32825 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-e1m6gu8k/'
[INFO 14:25:39] absl Connecting to: ws://127.0.0.1:39677/sc2api, attempt: 0, running: True
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 39677 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-legzltgi/'
[INFO 14:25:39] absl Connecting to: ws://127.0.0.1:41595/sc2api, attempt: 0, running: True
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 41595 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-mjcirkre/'
Starting up...
Starting up...
Starting up...
Starting up...
Starting up...
Starting up...
Starting up...
Startup Phase 1 complete
Starting up...
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
[INFO 14:25:40] absl Connecting to: ws://127.0.0.1:39315/sc2api, attempt: 1, running: True
[INFO 14:25:40] absl Connecting to: ws://127.0.0.1:37377/sc2api, attempt: 1, running: True
[INFO 14:25:40] absl Connecting to: ws://127.0.0.1:32825/sc2api, attempt: 1, running: True
[INFO 14:25:40] absl Connecting to: ws://127.0.0.1:39677/sc2api, attempt: 1, running: True
[INFO 14:25:40] absl Connecting to: ws://127.0.0.1:37421/sc2api, attempt: 1, running: True
[INFO 14:25:40] absl Connecting to: ws://127.0.0.1:41595/sc2api, attempt: 1, running: True
[INFO 14:25:40] absl Connecting to: ws://127.0.0.1:41917/sc2api, attempt: 1, running: True
[INFO 14:25:40] absl Connecting to: ws://127.0.0.1:46737/sc2api, attempt: 1, running: True
[INFO 14:25:41] absl Connecting to: ws://127.0.0.1:39315/sc2api, attempt: 2, running: True
[INFO 14:25:41] absl Connecting to: ws://127.0.0.1:37377/sc2api, attempt: 2, running: True
[INFO 14:25:41] absl Connecting to: ws://127.0.0.1:32825/sc2api, attempt: 2, running: True
[INFO 14:25:41] absl Connecting to: ws://127.0.0.1:39677/sc2api, attempt: 2, running: True
[INFO 14:25:41] absl Connecting to: ws://127.0.0.1:41595/sc2api, attempt: 2, running: True
[INFO 14:25:41] absl Connecting to: ws://127.0.0.1:37421/sc2api, attempt: 2, running: True
[INFO 14:25:41] absl Connecting to: ws://127.0.0.1:41917/sc2api, attempt: 2, running: True
[INFO 14:25:41] absl Connecting to: ws://127.0.0.1:46737/sc2api, attempt: 2, running: True
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
[INFO 14:25:42] absl Connecting to: ws://127.0.0.1:39315/sc2api, attempt: 3, running: True
[INFO 14:25:42] absl Connecting to: ws://127.0.0.1:37377/sc2api, attempt: 3, running: True
[INFO 14:25:42] absl Connecting to: ws://127.0.0.1:32825/sc2api, attempt: 3, running: True
[INFO 14:25:42] absl Connecting to: ws://127.0.0.1:39677/sc2api, attempt: 3, running: True
[INFO 14:25:42] absl Connecting to: ws://127.0.0.1:41917/sc2api, attempt: 3, running: True
[INFO 14:25:42] absl Connecting to: ws://127.0.0.1:41595/sc2api, attempt: 3, running: True
[INFO 14:25:42] absl Connecting to: ws://127.0.0.1:37421/sc2api, attempt: 3, running: True
[INFO 14:25:42] absl Connecting to: ws://127.0.0.1:46737/sc2api, attempt: 3, running: True
Listening on: 127.0.0.1:37421
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:39315
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:41917
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:37377
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:32825
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:39677
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:41595
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:46737
Startup Phase 3 complete. Ready for commands.
[INFO 14:25:43] absl Connecting to: ws://127.0.0.1:39315/sc2api, attempt: 4, running: True
[INFO 14:25:43] absl Connecting to: ws://127.0.0.1:37377/sc2api, attempt: 4, running: True
ConnectHandler: Request from 127.0.0.1:59038 accepted
ReadyHandler: 127.0.0.1:59038 ready
ConnectHandler: Request from 127.0.0.1:49634 accepted
ReadyHandler: 127.0.0.1:49634 ready
[INFO 14:25:43] absl Connecting to: ws://127.0.0.1:32825/sc2api, attempt: 4, running: True
ConnectHandler: Request from 127.0.0.1:35914 accepted
ReadyHandler: 127.0.0.1:35914 ready
[INFO 14:25:43] absl Connecting to: ws://127.0.0.1:39677/sc2api, attempt: 4, running: True
ConnectHandler: Request from 127.0.0.1:53246 accepted
ReadyHandler: 127.0.0.1:53246 ready
Requesting to join a single player game
Requesting to join a single player game
Configuring interface options
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: raw interface enabled
Configure: render interface disabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Launching next game.
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 2
Next launch phase started: 3
Launching next game.
Next launch phase started: 4
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Next launch phase started: 2
Next launch phase started: 3
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
[INFO 14:25:43] absl Connecting to: ws://127.0.0.1:46737/sc2api, attempt: 4, running: True
[INFO 14:25:43] absl Connecting to: ws://127.0.0.1:41917/sc2api, attempt: 4, running: True
[INFO 14:25:43] absl Connecting to: ws://127.0.0.1:41595/sc2api, attempt: 4, running: True
[INFO 14:25:43] absl Connecting to: ws://127.0.0.1:37421/sc2api, attempt: 4, running: True
ConnectHandler: Request from 127.0.0.1:46846 accepted
ReadyHandler: 127.0.0.1:46846 ready
ConnectHandler: Request from 127.0.0.1:39188 accepted
ReadyHandler: 127.0.0.1:39188 ready
ConnectHandler: Request from 127.0.0.1:44778 accepted
ReadyHandler: 127.0.0.1:44778 ready
ConnectHandler: Request from 127.0.0.1:57886 accepted
ReadyHandler: 127.0.0.1:57886 ready
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 4
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Sending ResponseJoinGame
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Sending ResponseJoinGame
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
/root/DRL-Final/pymarl2/src/components/episode_buffer.py:103: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:278.)
  v = th.tensor(v, dtype=dtype, device=self.device)
/root/DRL-Final/pymarl2/src/components/episode_buffer.py:103: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
[DEBUG 14:25:58] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:58] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.275\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : -0.025\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : 0.000\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:25:58] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:58] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.275\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : -0.025\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : 0.000\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:25:58] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:58] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.275\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : -0.025\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : 0.000\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:25:58] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:58] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.275\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : -0.025\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : 0.000\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:25:58] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:58] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.275\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : -0.025\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : 0.000\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:25:58] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:58] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.275\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : -0.025\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : 0.000\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:25:58] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:58] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:25:58] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.275\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : -0.025\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : 0.000\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:25:58] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.275\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : -0.025\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.250\\nrelative y : 0.000\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:00] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 548
[DEBUG 14:26:00] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:00] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 621
[DEBUG 14:26:00] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:02] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 543
[DEBUG 14:26:02] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:02] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 751
[DEBUG 14:26:02] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:04] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 673
[DEBUG 14:26:04] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:05] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 937
[DEBUG 14:26:05] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:05] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 487
[DEBUG 14:26:05] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:06] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 652
[DEBUG 14:26:06] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:06] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:06] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:06] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.220\\nrelative y : -0.038\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.040\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.245\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.234\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:06] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.040\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.234\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:06] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:06] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.062\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.037\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.040\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.234\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:06] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:06] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.268\\nrelative y : 0.006\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.254\\nrelative y : 0.026\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.230\\nrelative y : 0.027\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.234\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:06] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:06] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:06] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.243\\nrelative y : -0.016\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.262\\nrelative y : 0.008\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.234\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:06] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.266\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.234\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:06] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:06] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:06] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : -0.040\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.234\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:06] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.252\\nrelative y : 0.012\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.211\\nrelative y : 0.004\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.234\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : -0.024\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.210\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:09] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 852
[DEBUG 14:26:09] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:09] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 928
[DEBUG 14:26:09] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:10] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 564
[DEBUG 14:26:10] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:13] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 775
[DEBUG 14:26:13] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:13] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 1154
[DEBUG 14:26:13] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:16] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 831
[DEBUG 14:26:16] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:16] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 750
[DEBUG 14:26:16] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:17] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 509
[DEBUG 14:26:17] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:17] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:17] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:17] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.291\\nrelative y : 0.010\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.329\\nrelative y : 0.006\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.266\\nrelative y : -0.040\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.194\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:17] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:17] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:17] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.220\\nrelative y : 0.002\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : 0.040\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.245\\nrelative y : -0.064\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.194\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:17] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : -0.040\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.194\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:17] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : 0.040\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.194\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:17] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:17] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:17] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:17] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.252\\nrelative y : -0.028\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.212\\nrelative y : -0.036\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.218\\nrelative y : 0.004\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.194\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:17] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.100\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.075\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.040\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.194\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:17] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.243\\nrelative y : -0.018\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.222\\nrelative y : 0.007\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.194\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:17] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:17] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.259\\nrelative y : 0.032\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.289\\nrelative y : 0.035\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.230\\nrelative y : 0.027\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.194\\nrelative y : 0.001\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.170\\nrelative y : 0.001\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:19] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 735
[DEBUG 14:26:19] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:20] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 777
[DEBUG 14:26:20] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:20] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 299
[DEBUG 14:26:20] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:22] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 884
[DEBUG 14:26:22] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:23] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 751
[DEBUG 14:26:23] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:24] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 518
[DEBUG 14:26:24] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:25] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 741
[DEBUG 14:26:25] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:27] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 893
[DEBUG 14:26:27] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:27] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:27] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.059\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.035\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.154\\nrelative y : 0.002\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : 0.002\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:27] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:27] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.213\\nrelative y : -0.027\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.197\\nrelative y : -0.045\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.218\\nrelative y : 0.004\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.154\\nrelative y : 0.002\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : 0.002\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:27] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:27] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.252\\nrelative y : 0.017\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.329\\nrelative y : -0.035\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.266\\nrelative y : -0.004\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.154\\nrelative y : 0.002\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : 0.002\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:27] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:27] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.228\\nrelative y : 0.036\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.205\\nrelative y : 0.002\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.245\\nrelative y : -0.104\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.154\\nrelative y : 0.002\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : 0.002\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:27] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:27] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : 0.040\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.154\\nrelative y : 0.002\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : 0.002\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:27] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:27] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : -0.040\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.154\\nrelative y : 0.002\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : 0.002\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:27] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:27] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.297\\nrelative y : 0.031\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.319\\nrelative y : 0.043\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.189\\nrelative y : 0.027\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.154\\nrelative y : 0.002\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : 0.002\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:27] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:27] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.203\\nrelative y : -0.018\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.262\\nrelative y : 0.007\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.154\\nrelative y : 0.002\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : -0.023\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.129\\nrelative y : 0.002\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:29] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 607
[DEBUG 14:26:29] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:30] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 796
[DEBUG 14:26:30] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:32] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 798
[DEBUG 14:26:32] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:32] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 704
[DEBUG 14:26:32] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:34] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 571
[DEBUG 14:26:34] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:35] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 891
[DEBUG 14:26:35] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:37] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 706
[DEBUG 14:26:37] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:37] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 964
[DEBUG 14:26:37] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:37] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:37] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.059\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : -0.035\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.114\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : -0.022\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:37] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:37] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:37] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:37] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : 0.080\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.114\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : -0.022\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:37] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.217\\nrelative y : -0.066\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.195\\nrelative y : -0.012\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.178\\nrelative y : 0.006\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.114\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : -0.022\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:37] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.212\\nrelative y : 0.017\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.329\\nrelative y : 0.006\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.266\\nrelative y : -0.004\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.114\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : -0.022\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:37] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:37] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:37] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.243\\nrelative y : -0.018\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.222\\nrelative y : 0.007\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.114\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : -0.022\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:37] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.228\\nrelative y : 0.077\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.205\\nrelative y : 0.002\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.205\\nrelative y : -0.104\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.114\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : -0.022\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:37] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:37] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.170\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : -0.040\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.114\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : -0.022\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:37] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:37] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.257\\nrelative y : 0.031\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.359\\nrelative y : 0.043\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.230\\nrelative y : 0.027\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.114\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : -0.022\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.089\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:39] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 574
[DEBUG 14:26:39] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:40] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 685
[DEBUG 14:26:40] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:41] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 481
[DEBUG 14:26:41] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:42] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 776
[DEBUG 14:26:42] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:42] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 535
[DEBUG 14:26:42] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:44] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 456
[DEBUG 14:26:44] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:46] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 952
[DEBUG 14:26:46] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:46] urllib3.connectionpool http://localhost:11434 "POST /v1/chat/completions HTTP/11" 200 941
[DEBUG 14:26:46] openai message='OpenAI API response' path=http://localhost:11434/v1/chat/completions processing_ms=None request_id=None response_code=200
[DEBUG 14:26:46] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:46] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.228\\nrelative y : 0.036\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.205\\nrelative y : 0.002\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.205\\nrelative y : -0.064\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.074\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : -0.021\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:46] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:46] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:46] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:46] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.212\\nrelative y : 0.017\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.369\\nrelative y : 0.006\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.266\\nrelative y : -0.004\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.074\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : -0.021\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:46] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.219\\nrelative y : 0.032\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.359\\nrelative y : 0.043\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.200\\nrelative y : 0.017\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.074\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : -0.021\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:46] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.025\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.203\\nrelative y : -0.018\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.222\\nrelative y : 0.007\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.074\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : -0.021\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:46] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:46] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:46] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.250\\nrelative y : -0.100\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : -0.075\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.185\\nrelative y : 0.040\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.074\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : -0.021\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:46] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.210\\nrelative y : 0.121\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : 0.000\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.074\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : -0.021\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:46] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:46] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.170\\nrelative y : -0.065\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.290\\nrelative y : 0.000\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.225\\nrelative y : -0.080\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.074\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : -0.021\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
[DEBUG 14:26:46] openai message='Request to OpenAI API' method=post path=http://localhost:11434/v1/chat/completions
[DEBUG 14:26:46] openai api_version=None data='{"model": "llama3:latest", "messages": [{"role": "user", "content": "You are an AI agent controlling 3 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.217\\nrelative y : -0.106\\nunit type : Marine\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.200\\nrelative y : 0.025\\nunit type : Marine\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : -0.177\\nrelative y : -0.034\\nunit type : Marine\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.074\\nrelative y : 0.003\\nunit type : Marine\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : -0.021\\nunit type : Marine\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.049\\nrelative y : 0.003\\nunit type : Marine\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 3 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 3 action IDs for your units."}]}' message='Post details'
