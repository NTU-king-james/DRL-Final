[INFO 09:22:54] pymarl Running command 'my_main'
[INFO 09:22:54] pymarl Started run with ID "13"
[DEBUG 09:22:54] pymarl Starting Heartbeat
[DEBUG 09:22:54] my_main Started
[INFO 09:22:54] my_main Experiment Parameters:
[INFO 09:22:54] my_main 

{   'action_selector': 'epsilon_greedy',
    'agent': 'n_rnn',
    'agent_output_type': 'q',
    'batch_size': 128,
    'batch_size_run': 8,
    'buffer_cpu_only': True,
    'buffer_size': 5000,
    'checkpoint_path': '',
    'critic_lr': 0.0005,
    'env': 'sc2',
    'env_args': {   'continuing_episode': False,
                    'debug': False,
                    'difficulty': '7',
                    'game_version': None,
                    'heuristic_ai': False,
                    'heuristic_rest': False,
                    'map_name': 'corridor',
                    'move_amount': 2,
                    'obs_all_health': True,
                    'obs_instead_of_state': False,
                    'obs_last_action': False,
                    'obs_own_health': True,
                    'obs_pathing_grid': False,
                    'obs_terrain_height': False,
                    'obs_timestep_number': False,
                    'replay_dir': '',
                    'replay_prefix': '',
                    'reward_death_value': 10,
                    'reward_defeat': 0,
                    'reward_negative_scale': 0.5,
                    'reward_only_positive': True,
                    'reward_scale': True,
                    'reward_scale_rate': 20,
                    'reward_sparse': False,
                    'reward_win': 200,
                    'seed': 939404553,
                    'state_last_action': True,
                    'state_timestep_number': False,
                    'step_mul': 8},
    'epsilon_anneal_time': 100000,
    'epsilon_finish': 0.05,
    'epsilon_start': 1.0,
    'evaluate': False,
    'gain': 0.01,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hypernet_embed': 64,
    'label': 'default_label',
    'learner': 'nq_learner',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': 'results',
    'log_interval': 10000,
    'lr': 0.001,
    'mac': 'n_mac',
    'mixer': 'qmix',
    'mixing_embed_dim': 32,
    'name': 'qmix_env=8_adam_td_lambda',
    'obs_agent_id': True,
    'obs_last_action': True,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'optimizer': 'adam',
    'per_alpha': 0.6,
    'per_beta': 0.4,
    'q_lambda': False,
    'repeat_id': 1,
    'return_priority': False,
    'rnn_hidden_dim': 64,
    'run': 'default',
    'runner': 'parallel',
    'runner_log_interval': 10000,
    'save_model': False,
    'save_model_interval': 2000000,
    'save_replay': False,
    'seed': 939404553,
    't_max': 10050000,
    'target_update_interval': 200,
    'td_lambda': 0.6,
    'test_greedy': True,
    'test_interval': 10000,
    'test_nepisode': 32,
    'use_cuda': True,
    'use_layer_norm': False,
    'use_orthogonal': False,
    'use_per': False,
    'use_tensorboard': False}

Mixer Size: 
68.929K
[INFO 09:23:02] my_main Beginning training for 10050000 timesteps
[INFO 09:23:02] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 37667 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-cv0iqwxc/
[INFO 09:23:02] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 42121 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-_7myu8qg/
[INFO 09:23:02] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 36999 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-u3sa63ts/
[INFO 09:23:02] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 39737 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-fsomn942/
[INFO 09:23:02] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 43311 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-znn5rpd_/
[INFO 09:23:02] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 33239 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-m3voze6d/
[INFO 09:23:02] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 41713 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-2tpmbdz7/
[INFO 09:23:02] absl Launching SC2: /root/StarCraftII/Versions/Base75689/SC2_x64 -listen 127.0.0.1 -port 34247 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-glei1jg9/
[INFO 09:23:02] absl Connecting to: ws://127.0.0.1:33239/sc2api, attempt: 0, running: True
[INFO 09:23:02] absl Connecting to: ws://127.0.0.1:37667/sc2api, attempt: 0, running: True
[INFO 09:23:02] absl Connecting to: ws://127.0.0.1:42121/sc2api, attempt: 0, running: True
[INFO 09:23:02] absl Connecting to: ws://127.0.0.1:34247/sc2api, attempt: 0, running: True
[INFO 09:23:02] absl Connecting to: ws://127.0.0.1:41713/sc2api, attempt: 0, running: True
[INFO 09:23:02] absl Connecting to: ws://127.0.0.1:36999/sc2api, attempt: 0, running: True
[INFO 09:23:02] absl Connecting to: ws://127.0.0.1:43311/sc2api, attempt: 0, running: True
[INFO 09:23:02] absl Connecting to: ws://127.0.0.1:39737/sc2api, attempt: 0, running: True
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 33239 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-m3voze6d/'
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 43311 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-znn5rpd_/'
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 41713 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-2tpmbdz7/'
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 34247 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-glei1jg9/'
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 36999 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-u3sa63ts/'
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 42121 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-_7myu8qg/'
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 39737 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-fsomn942/'
Version: B75689 (SC2.4.10)
Build: Aug 12 2019 17:16:57
Command Line: '"/root/StarCraftII/Versions/Base75689/SC2_x64" -listen 127.0.0.1 -port 37667 -dataDir /root/StarCraftII/ -tempDir /tmp/sc-cv0iqwxc/'
Starting up...
Starting up...
Starting up...
Starting up...
Starting up...
Startup Phase 1 complete
Startup Phase 1 complete
Starting up...
Starting up...
Starting up...
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
Startup Phase 1 complete
[INFO 09:23:03] absl Connecting to: ws://127.0.0.1:37667/sc2api, attempt: 1, running: True
[INFO 09:23:03] absl Connecting to: ws://127.0.0.1:33239/sc2api, attempt: 1, running: True
[INFO 09:23:03] absl Connecting to: ws://127.0.0.1:41713/sc2api, attempt: 1, running: True
[INFO 09:23:03] absl Connecting to: ws://127.0.0.1:34247/sc2api, attempt: 1, running: True
[INFO 09:23:03] absl Connecting to: ws://127.0.0.1:36999/sc2api, attempt: 1, running: True
[INFO 09:23:03] absl Connecting to: ws://127.0.0.1:42121/sc2api, attempt: 1, running: True
[INFO 09:23:03] absl Connecting to: ws://127.0.0.1:43311/sc2api, attempt: 1, running: True
[INFO 09:23:03] absl Connecting to: ws://127.0.0.1:39737/sc2api, attempt: 1, running: True
[INFO 09:23:04] absl Connecting to: ws://127.0.0.1:42121/sc2api, attempt: 2, running: True
[INFO 09:23:04] absl Connecting to: ws://127.0.0.1:37667/sc2api, attempt: 2, running: True
[INFO 09:23:04] absl Connecting to: ws://127.0.0.1:33239/sc2api, attempt: 2, running: True
[INFO 09:23:04] absl Connecting to: ws://127.0.0.1:36999/sc2api, attempt: 2, running: True
[INFO 09:23:04] absl Connecting to: ws://127.0.0.1:41713/sc2api, attempt: 2, running: True
[INFO 09:23:04] absl Connecting to: ws://127.0.0.1:34247/sc2api, attempt: 2, running: True
[INFO 09:23:04] absl Connecting to: ws://127.0.0.1:43311/sc2api, attempt: 2, running: True
[INFO 09:23:04] absl Connecting to: ws://127.0.0.1:39737/sc2api, attempt: 2, running: True
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
Startup Phase 2 complete
Creating stub renderer...
[INFO 09:23:05] absl Connecting to: ws://127.0.0.1:42121/sc2api, attempt: 3, running: True
[INFO 09:23:05] absl Connecting to: ws://127.0.0.1:33239/sc2api, attempt: 3, running: True
[INFO 09:23:05] absl Connecting to: ws://127.0.0.1:37667/sc2api, attempt: 3, running: True
[INFO 09:23:05] absl Connecting to: ws://127.0.0.1:36999/sc2api, attempt: 3, running: True
[INFO 09:23:05] absl Connecting to: ws://127.0.0.1:41713/sc2api, attempt: 3, running: True
[INFO 09:23:05] absl Connecting to: ws://127.0.0.1:34247/sc2api, attempt: 3, running: True
[INFO 09:23:05] absl Connecting to: ws://127.0.0.1:39737/sc2api, attempt: 3, running: True
[INFO 09:23:05] absl Connecting to: ws://127.0.0.1:43311/sc2api, attempt: 3, running: True
Listening on: 127.0.0.1:36999
Listening on: 127.0.0.1:37667
Listening on: 127.0.0.1:42121
Startup Phase 3 complete. Ready for commands.
Startup Phase 3 complete. Ready for commands.
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:41713
Startup Phase 3 complete. Ready for commands.
[INFO 09:23:06] absl Connecting to: ws://127.0.0.1:42121/sc2api, attempt: 4, running: True
[INFO 09:23:06] absl Connecting to: ws://127.0.0.1:33239/sc2api, attempt: 4, running: True
[INFO 09:23:06] absl Connecting to: ws://127.0.0.1:37667/sc2api, attempt: 4, running: True
ConnectHandler: Request from 127.0.0.1:41552 accepted
ReadyHandler: 127.0.0.1:41552 ready
[INFO 09:23:06] absl Connecting to: ws://127.0.0.1:36999/sc2api, attempt: 4, running: True
ConnectHandler: Request from 127.0.0.1:42218 accepted
ReadyHandler: 127.0.0.1:42218 ready
ConnectHandler: Request from 127.0.0.1:37758 accepted
ReadyHandler: 127.0.0.1:37758 ready
[INFO 09:23:06] absl Connecting to: ws://127.0.0.1:41713/sc2api, attempt: 4, running: True
[INFO 09:23:06] absl Connecting to: ws://127.0.0.1:34247/sc2api, attempt: 4, running: True
[INFO 09:23:06] absl Connecting to: ws://127.0.0.1:43311/sc2api, attempt: 4, running: True
[INFO 09:23:06] absl Connecting to: ws://127.0.0.1:39737/sc2api, attempt: 4, running: True
ConnectHandler: Request from 127.0.0.1:57104 accepted
ReadyHandler: 127.0.0.1:57104 ready
Listening on: 127.0.0.1:43311
Startup Phase 3 complete. Ready for commands.
Listening on: 127.0.0.1:33239
Listening on: 127.0.0.1:34247
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 2
Next launch phase started: 3
Listening on: 127.0.0.1:39737
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Startup Phase 3 complete. Ready for commands.
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Startup Phase 3 complete. Ready for commands.
Launching next game.
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Startup Phase 3 complete. Ready for commands.
[INFO 09:23:07] absl Connecting to: ws://127.0.0.1:33239/sc2api, attempt: 5, running: True
ConnectHandler: Request from 127.0.0.1:52768 accepted
ReadyHandler: 127.0.0.1:52768 ready
[INFO 09:23:07] absl Connecting to: ws://127.0.0.1:34247/sc2api, attempt: 5, running: True
[INFO 09:23:07] absl Connecting to: ws://127.0.0.1:43311/sc2api, attempt: 5, running: True
[INFO 09:23:07] absl Connecting to: ws://127.0.0.1:39737/sc2api, attempt: 5, running: True
ConnectHandler: Request from 127.0.0.1:43018 accepted
ReadyHandler: 127.0.0.1:43018 ready
ConnectHandler: Request from 127.0.0.1:55792 accepted
ConnectHandler: Request from 127.0.0.1:55144 accepted
ReadyHandler: 127.0.0.1:55792 ready
ReadyHandler: 127.0.0.1:55144 ready
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 2
Next launch phase started: 6
Next launch phase started: 3
Next launch phase started: 7
Next launch phase started: 8
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Launching next game.
Next launch phase started: 4
Requesting to join a single player game
Configuring interface options
Configure: raw interface enabled
Configure: feature layer interface disabled
Configure: score interface disabled
Configure: render interface disabled
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Launching next game.
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 2
Next launch phase started: 3
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Next launch phase started: 4
Next launch phase started: 5
Next launch phase started: 6
Next launch phase started: 7
Next launch phase started: 8
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Game has started.
Using default stable ids, none found at: /root/StarCraftII/stableid.json
Successfully loaded stable ids: GameData\stableid.json
Sending ResponseJoinGame
Sending ResponseJoinGame
/root/DRL-Final/pymarl2/src/components/episode_buffer.py:103: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:278.)
  v = th.tensor(v, dtype=dtype, device=self.device)
/root/DRL-Final/pymarl2/src/components/episode_buffer.py:103: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)

===== LLM PROMPT (Sending to API) =====
You are an AI agent controlling 6 units in a StarCraft II scenario.
Your objective is to defeat all enemy units by issuing commands to your units.
--- CURRENT GLOBAL STATE ---
ALLY #1:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.075
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #2:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.078
unit type : Zealot
shield : 100.0%
ALLY #3:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #4:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.145
unit type : Zealot
shield : 100.0%
ALLY #5:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.142
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #6:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.144
relative y : 0.076
unit type : Zealot
shield : 100.0%
ENEMY #1:
health : 100.0%
relative x : 0.425
relative y : 0.437
unit type : Zergling
ENEMY #2:
health : 100.0%
relative x : 0.450
relative y : 0.437
unit type : Zergling
ENEMY #3:
health : 100.0%
relative x : 0.452
relative y : 0.410
unit type : Zergling
ENEMY #4:
health : 100.0%
relative x : 0.452
relative y : 0.464
unit type : Zergling
ENEMY #5:
health : 100.0%
relative x : 0.425
relative y : 0.384
unit type : Zergling
ENEMY #6:
health : 100.0%
relative x : 0.479
relative y : 0.437
unit type : Zergling
ENEMY #7:
health : 100.0%
relative x : 0.452
relative y : 0.384
unit type : Zergling
ENEMY #8:
health : 100.0%
relative x : 0.372
relative y : 0.410
unit type : Zergling
ENEMY #9:
health : 100.0%
relative x : 0.479
relative y : 0.410
unit type : Zergling
ENEMY #10:
health : 100.0%
relative x : 0.372
relative y : 0.464
unit type : Zergling
ENEMY #11:
health : 100.0%
relative x : 0.372
relative y : 0.489
unit type : Zergling
ENEMY #12:
health : 100.0%
relative x : 0.479
relative y : 0.489
unit type : Zergling
ENEMY #13:
health : 100.0%
relative x : 0.479
relative y : 0.384
unit type : Zergling
ENEMY #14:
health : 100.0%
relative x : 0.399
relative y : 0.384
unit type : Zergling
ENEMY #15:
health : 100.0%
relative x : 0.452
relative y : 0.489
unit type : Zergling
ENEMY #16:
health : 100.0%
relative x : 0.399
relative y : 0.489
unit type : Zergling
ENEMY #17:
health : 100.0%
relative x : 0.479
relative y : 0.464
unit type : Zergling
ENEMY #18:
health : 100.0%
relative x : 0.372
relative y : 0.437
unit type : Zergling
ENEMY #19:
health : 100.0%
relative x : 0.425
relative y : 0.489
unit type : Zergling
ENEMY #20:
health : 100.0%
relative x : 0.399
relative y : 0.410
unit type : Zergling
ENEMY #21:
health : 100.0%
relative x : 0.399
relative y : 0.464
unit type : Zergling
ENEMY #22:
health : 100.0%
relative x : 0.401
relative y : 0.437
unit type : Zergling
ENEMY #23:
health : 100.0%
relative x : 0.425
relative y : 0.462
unit type : Zergling
ENEMY #24:
health : 100.0%
relative x : 0.425
relative y : 0.413
unit type : Zergling

--- ORDERS FOR YOUR UNITS ---
For each of your 6 units, select one action from its list of available actions.
In the last line respond with a formatted list of integer action IDs, one for each unit.
For example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]
Make sure the action ID given to each agent is available for each agent.
-- Unit 0 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 1 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 2 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 3 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 4 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 5 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

Based on the state and available actions, provide the list of 6 action IDs for your units.
=======================================
[DEBUG 09:23:23] openai message='Request to OpenAI API' method=post path=http://127.0.0.1:11434/v1/chat/completions
[DEBUG 09:23:23] openai api_version=None data='{"model": "llama2", "messages": [{"role": "user", "content": "You are an AI agent controlling 6 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.075\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.078\\nunit type : Zealot\\nshield : 100.0%\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #4:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.145\\nunit type : Zealot\\nshield : 100.0%\\nALLY #5:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.142\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #6:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.144\\nrelative y : 0.076\\nunit type : Zealot\\nshield : 100.0%\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.450\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #4:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #5:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #6:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #7:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #8:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #9:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #10:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #11:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #12:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #13:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #14:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #15:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #16:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #17:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #18:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #19:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #20:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #21:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #22:\\nhealth : 100.0%\\nrelative x : 0.401\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #23:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.462\\nunit type : Zergling\\nENEMY #24:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.413\\nunit type : Zergling\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 6 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 3 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 4 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 5 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 6 action IDs for your units."}]}' message='Post details'
[DEBUG 09:23:23] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)

===== LLM PROMPT (Sending to API) =====
You are an AI agent controlling 6 units in a StarCraft II scenario.
Your objective is to defeat all enemy units by issuing commands to your units.
--- CURRENT GLOBAL STATE ---
ALLY #1:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.075
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #2:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.078
unit type : Zealot
shield : 100.0%
ALLY #3:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #4:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.145
unit type : Zealot
shield : 100.0%
ALLY #5:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.142
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #6:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.144
relative y : 0.076
unit type : Zealot
shield : 100.0%
ENEMY #1:
health : 100.0%
relative x : 0.425
relative y : 0.437
unit type : Zergling
ENEMY #2:
health : 100.0%
relative x : 0.450
relative y : 0.437
unit type : Zergling
ENEMY #3:
health : 100.0%
relative x : 0.452
relative y : 0.410
unit type : Zergling
ENEMY #4:
health : 100.0%
relative x : 0.452
relative y : 0.464
unit type : Zergling
ENEMY #5:
health : 100.0%
relative x : 0.425
relative y : 0.384
unit type : Zergling
ENEMY #6:
health : 100.0%
relative x : 0.479
relative y : 0.437
unit type : Zergling
ENEMY #7:
health : 100.0%
relative x : 0.452
relative y : 0.384
unit type : Zergling
ENEMY #8:
health : 100.0%
relative x : 0.372
relative y : 0.410
unit type : Zergling
ENEMY #9:
health : 100.0%
relative x : 0.479
relative y : 0.410
unit type : Zergling
ENEMY #10:
health : 100.0%
relative x : 0.372
relative y : 0.464
unit type : Zergling
ENEMY #11:
health : 100.0%
relative x : 0.372
relative y : 0.489
unit type : Zergling
ENEMY #12:
health : 100.0%
relative x : 0.479
relative y : 0.489
unit type : Zergling
ENEMY #13:
health : 100.0%
relative x : 0.479
relative y : 0.384
unit type : Zergling
ENEMY #14:
health : 100.0%
relative x : 0.399
relative y : 0.384
unit type : Zergling
ENEMY #15:
health : 100.0%
relative x : 0.452
relative y : 0.489
unit type : Zergling
ENEMY #16:
health : 100.0%
relative x : 0.399
relative y : 0.489
unit type : Zergling
ENEMY #17:
health : 100.0%
relative x : 0.479
relative y : 0.464
unit type : Zergling
ENEMY #18:
health : 100.0%
relative x : 0.372
relative y : 0.437
unit type : Zergling
ENEMY #19:
health : 100.0%
relative x : 0.425
relative y : 0.489
unit type : Zergling
ENEMY #20:
health : 100.0%
relative x : 0.399
relative y : 0.410
unit type : Zergling
ENEMY #21:
health : 100.0%
relative x : 0.399
relative y : 0.464
unit type : Zergling
ENEMY #22:
health : 100.0%
relative x : 0.401
relative y : 0.437
unit type : Zergling
ENEMY #23:
health : 100.0%
relative x : 0.425
relative y : 0.462
unit type : Zergling
ENEMY #24:
health : 100.0%
relative x : 0.425
relative y : 0.413
unit type : Zergling

--- ORDERS FOR YOUR UNITS ---
For each of your 6 units, select one action from its list of available actions.
In the last line respond with a formatted list of integer action IDs, one for each unit.
For example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]
Make sure the action ID given to each agent is available for each agent.
-- Unit 0 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 1 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 2 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 3 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 4 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 5 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

Based on the state and available actions, provide the list of 6 action IDs for your units.[DEBUG 09:23:23] urllib3.connectionpool Starting new HTTP connection (1): 127.0.0.1:11434

=======================================
[DEBUG 09:23:23] openai message='Request to OpenAI API' method=post path=http://127.0.0.1:11434/v1/chat/completions
[DEBUG 09:23:23] openai api_version=None data='{"model": "llama2", "messages": [{"role": "user", "content": "You are an AI agent controlling 6 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.075\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.078\\nunit type : Zealot\\nshield : 100.0%\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #4:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.145\\nunit type : Zealot\\nshield : 100.0%\\nALLY #5:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.142\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #6:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.144\\nrelative y : 0.076\\nunit type : Zealot\\nshield : 100.0%\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.450\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #4:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #5:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #6:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #7:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #8:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #9:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #10:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #11:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #12:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #13:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #14:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #15:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #16:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #17:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #18:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #19:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #20:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #21:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #22:\\nhealth : 100.0%\\nrelative x : 0.401\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #23:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.462\\nunit type : Zergling\\nENEMY #24:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.413\\nunit type : Zergling\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 6 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 3 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 4 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 5 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 6 action IDs for your units."}]}' message='Post details'

===== LLM PROMPT (Sending to API) =====

===== LLM PROMPT (Sending to API) =====You are an AI agent controlling 6 units in a StarCraft II scenario.
Your objective is to defeat all enemy units by issuing commands to your units.
--- CURRENT GLOBAL STATE ---
ALLY #1:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.075
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #2:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.078
unit type : Zealot
shield : 100.0%
ALLY #3:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #4:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.145
unit type : Zealot
shield : 100.0%
ALLY #5:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.142
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #6:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.144
relative y : 0.076
unit type : Zealot
shield : 100.0%
ENEMY #1:
health : 100.0%
relative x : 0.425
relative y : 0.437
unit type : Zergling
ENEMY #2:
health : 100.0%
relative x : 0.450
relative y : 0.437
unit type : Zergling
ENEMY #3:
health : 100.0%
relative x : 0.452
relative y : 0.410
unit type : Zergling
ENEMY #4:
health : 100.0%
relative x : 0.452
relative y : 0.464
unit type : Zergling
ENEMY #5:
health : 100.0%
relative x : 0.425
relative y : 0.384
unit type : Zergling
ENEMY #6:
health : 100.0%
relative x : 0.479
relative y : 0.437
unit type : Zergling
ENEMY #7:
health : 100.0%
relative x : 0.452
relative y : 0.384
unit type : Zergling
ENEMY #8:
health : 100.0%
relative x : 0.372
relative y : 0.410
unit type : Zergling
ENEMY #9:
health : 100.0%
relative x : 0.479
relative y : 0.410
unit type : Zergling
ENEMY #10:
health : 100.0%
relative x : 0.372
relative y : 0.464
unit type : Zergling
ENEMY #11:
health : 100.0%
relative x : 0.372
relative y : 0.489
unit type : Zergling
ENEMY #12:
health : 100.0%
relative x : 0.479
relative y : 0.489
unit type : Zergling
ENEMY #13:
health : 100.0%
relative x : 0.479
relative y : 0.384
unit type : Zergling
ENEMY #14:
health : 100.0%
relative x : 0.399
relative y : 0.384
unit type : Zergling
ENEMY #15:
health : 100.0%
relative x : 0.452
relative y : 0.489
unit type : Zergling
ENEMY #16:
health : 100.0%
relative x : 0.399
relative y : 0.489
unit type : Zergling
ENEMY #17:
health : 100.0%
relative x : 0.479
relative y : 0.464
unit type : Zergling
ENEMY #18:
health : 100.0%
relative x : 0.372
relative y : 0.437
unit type : Zergling
ENEMY #19:
health : 100.0%
relative x : 0.425
relative y : 0.489
unit type : Zergling
ENEMY #20:
health : 100.0%
relative x : 0.399
relative y : 0.410
unit type : Zergling
ENEMY #21:
health : 100.0%
relative x : 0.399
relative y : 0.464
unit type : Zergling
ENEMY #22:
health : 100.0%
relative x : 0.401
relative y : 0.437
unit type : Zergling
ENEMY #23:
health : 100.0%
relative x : 0.425
relative y : 0.462
unit type : Zergling
ENEMY #24:
health : 100.0%
relative x : 0.425
relative y : 0.413
unit type : Zergling

--- ORDERS FOR YOUR UNITS ---
For each of your 6 units, select one action from its list of available actions.
In the last line respond with a formatted list of integer action IDs, one for each unit.
For example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]
Make sure the action ID given to each agent is available for each agent.
-- Unit 0 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 1 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 2 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 3 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 4 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 5 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

Based on the state and available actions, provide the list of 6 action IDs for your units.

=======================================
You are an AI agent controlling 6 units in a StarCraft II scenario.
Your objective is to defeat all enemy units by issuing commands to your units.
--- CURRENT GLOBAL STATE ---
ALLY #1:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.075
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #2:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.078
unit type : Zealot
shield : 100.0%
ALLY #3:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #4:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.145
unit type : Zealot
shield : 100.0%
ALLY #5:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.142
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #6:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.144
relative y : 0.076
unit type : Zealot
shield : 100.0%
ENEMY #1:
health : 100.0%
relative x : 0.425
relative y : 0.437
unit type : Zergling
ENEMY #2:
health : 100.0%
relative x : 0.450
relative y : 0.437
unit type : Zergling
ENEMY #3:
health : 100.0%
relative x : 0.452
relative y : 0.410
unit type : Zergling
ENEMY #4:
health : 100.0%
relative x : 0.452
relative y : 0.464
unit type : Zergling
ENEMY #5:
health : 100.0%
relative x : 0.425
relative y : 0.384
unit type : Zergling
ENEMY #6:
health : 100.0%
relative x : 0.479
relative y : 0.437
unit type : Zergling
ENEMY #7:
health : 100.0%
relative x : 0.452
relative y : 0.384
unit type : Zergling
ENEMY #8:
health : 100.0%
relative x : 0.372
relative y : 0.410
unit type : Zergling
ENEMY #9:
health : 100.0%
relative x : 0.479
relative y : 0.410
unit type : Zergling
ENEMY #10:
health : 100.0%
relative x : 0.372
relative y : 0.464
unit type : Zergling
ENEMY #11:
health : 100.0%
relative x : 0.372
relative y : 0.489
unit type : Zergling
ENEMY #12:
health : 100.0%
relative x : 0.479
relative y : 0.489
unit type : Zergling
ENEMY #13:
health : 100.0%
relative x : 0.479
relative y : 0.384
unit type : Zergling
ENEMY #14:
health : 100.0%
relative x : 0.399
relative y : 0.384
unit type : Zergling
ENEMY #15:
health : 100.0%
relative x : 0.452
relative y : 0.489
unit type : Zergling
ENEMY #16:
health : 100.0%
relative x : 0.399
relative y : 0.489
unit type : Zergling
ENEMY #17:
health : 100.0%
relative x : 0.479
relative y : 0.464
unit type : Zergling
ENEMY #18:
health : 100.0%
relative x : 0.372
relative y : 0.437
unit type : Zergling
ENEMY #19:
health : 100.0%
relative x : 0.425
relative y : 0.489
unit type : Zergling
ENEMY #20:
health : 100.0%
relative x : 0.399
relative y : 0.410
unit type : Zergling
ENEMY #21:
health : 100.0%
relative x : 0.399
relative y : 0.464
unit type : Zergling
ENEMY #22:
health : 100.0%
relative x : 0.401
relative y : 0.437
unit type : Zergling
ENEMY #23:
health : 100.0%
relative x : 0.425
relative y : 0.462
unit type : Zergling
ENEMY #24:
health : 100.0%
relative x : 0.425
relative y : 0.413
unit type : Zergling

--- ORDERS FOR YOUR UNITS ---
For each of your 6 units, select one action from its list of available actions.
In the last line respond with a formatted list of integer action IDs, one for each unit.
For example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]
Make sure the action ID given to each agent is available for each agent.
-- Unit 0 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 1 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 2 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 3 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 4 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 5 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

Based on the state and available actions, provide the list of 6 action IDs for your units.
=======================================

===== LLM PROMPT (Sending to API) =====
You are an AI agent controlling 6 units in a StarCraft II scenario.
Your objective is to defeat all enemy units by issuing commands to your units.
--- CURRENT GLOBAL STATE ---
ALLY #1:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.075
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #2:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.078
unit type : Zealot
shield : 100.0%
ALLY #3:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #4:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.145
unit type : Zealot
shield : 100.0%
ALLY #5:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.142
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #6:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.144
relative y : 0.076
unit type : Zealot
shield : 100.0%
ENEMY #1:
health : 100.0%
relative x : 0.425
relative y : 0.437
unit type : Zergling
ENEMY #2:
health : 100.0%
relative x : 0.450
relative y : 0.437
unit type : Zergling
ENEMY #3:
health : 100.0%
relative x : 0.452
relative y : 0.410
unit type : Zergling
ENEMY #4:
health : 100.0%
relative x : 0.452
relative y : 0.464
unit type : Zergling
ENEMY #5:
health : 100.0%
relative x : 0.425
relative y : 0.384
unit type : Zergling
ENEMY #6:
health : 100.0%
relative x : 0.479
relative y : 0.437
unit type : Zergling
ENEMY #7:
health : 100.0%
relative x : 0.452
relative y : 0.384
unit type : Zergling
ENEMY #8:
health : 100.0%
relative x : 0.372
relative y : 0.410
unit type : Zergling
ENEMY #9:
health : 100.0%
relative x : 0.479
relative y : 0.410
unit type : Zergling
ENEMY #10:
health : 100.0%
relative x : 0.372
relative y : 0.464
unit type : Zergling
ENEMY #11:
health : 100.0%
relative x : 0.372
relative y : 0.489
unit type : Zergling
ENEMY #12:
health : 100.0%
relative x : 0.479
relative y : 0.489
unit type : Zergling
ENEMY #13:
health : 100.0%
relative x : 0.479
relative y : 0.384
unit type : Zergling
ENEMY #14:
health : 100.0%
relative x : 0.399
relative y : 0.384
unit type : Zergling
ENEMY #15:
health : 100.0%
relative x : 0.452
relative y : 0.489
unit type : Zergling
ENEMY #16:
health : 100.0%
relative x : 0.399
relative y : 0.489
unit type : Zergling
ENEMY #17:
health : 100.0%
relative x : 0.479
relative y : 0.464
unit type : Zergling
ENEMY #18:
health : 100.0%
relative x : 0.372
relative y : 0.437
unit type : Zergling
ENEMY #19:
health : 100.0%
relative x : 0.425
relative y : 0.489
unit type : Zergling
ENEMY #20:
health : 100.0%
relative x : 0.399
relative y : 0.410
unit type : Zergling
ENEMY #21:
health : 100.0%
relative x : 0.399
relative y : 0.464
unit type : Zergling
ENEMY #22:
health : 100.0%
relative x : 0.401
relative y : 0.437
unit type : Zergling
ENEMY #23:
health : 100.0%
relative x : 0.425
relative y : 0.462
unit type : Zergling
ENEMY #24:
health : 100.0%
relative x : 0.425
relative y : 0.413
unit type : Zergling

--- ORDERS FOR YOUR UNITS ---
For each of your 6 units, select one action from its list of available actions.
In the last line respond with a formatted list of integer action IDs, one for each unit.
For example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]
Make sure the action ID given to each agent is available for each agent.
-- Unit 0 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 1 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 2 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 3 --
Available Actions (ID: D[DEBUG 09:23:23] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
escription):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 4 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 5 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

Based on the state and available actions, provide the list of 6 action IDs for your units.
=======================================

===== LLM PROMPT (Sending to API) =====
You are an AI agent controlling 6 units in a StarCraft II scenario.
Your objective is to defeat all enemy units by issuing commands to your units.
--- CURRENT GLOBAL STATE ---
ALLY #1:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.075
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #2:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.078
unit type : Zealot
shield : 100.0%
ALLY #3:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #4:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.145
unit type : Zealot
shield : 100.0%
ALLY #5:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.142
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #6:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.144
relative y : 0.076
unit type : Zealot
shield : 100.0%
ENEMY #1:
health : 100.0%
relative x : 0.425
relative y : 0.437
unit type : Zergling
ENEMY #2:
health : 100.0%
relative x : 0.450
relative y : 0.437
unit type : Zergling
ENEMY #3:
health : 100.0%
relative x : 0.452
relative y : 0.410
unit type : Zergling
ENEMY #4:
health : 100.0%
relative x : 0.452
relative y : 0.464
unit type : Zergling
ENEMY #5:
health : 100.0%
relative x : 0.425
relative y : 0.384
unit type : Zergling
ENEMY #6:
health : 100.0%
relative x : 0.479
relative y : 0.437
unit type : Zergling
ENEMY #7:
health : 100.0%
relative x : 0.452
relative y : 0.384
unit type : Zergling
ENEMY #8:
health : 100.0%
relative x : 0.372
relative y : 0.410
unit type : Zergling
ENEMY #9:
health : 100.0%
relative x : 0.479
relative y : 0.410
unit type : Zergling
ENEMY #10:
health : 100.0%
relative x : 0.372
relative y : 0.464
unit type : Zergling
ENEMY #11:
health : 100.0%
relative x : 0.372
relative y : 0.489
unit type : Zergling
ENEMY #12:
health : 100.0%
relative x : 0.479
relative y : 0.489
unit type : Zergling
ENEMY #13:
health : 100.0%
relative x : 0.479
relative y : 0.384
unit type : Zergling
ENEMY #14:
health : 100.0%
relative x : 0.399
relative y : 0.384
unit type : Zergling
ENEMY #15:
health : 100.0%
relative x : 0.452
relative y : 0.489
unit type : Zergling
ENEMY #16:
health : 100.0%
relative x : 0.399
relative y : 0.489
unit type : Zergling
ENEMY #17:
health : 100.0%
relative x : 0.479
relative y : 0.464
unit type : Zergling
ENEMY #18:
health : 100.0%
relative x : 0.372
relative y : 0.437
unit type : Zergling
ENEMY #19:
health : 100.0%
relative x : 0.425
relative y : 0.489
unit type : Zergling
ENEMY #20:
health : 100.0%
relative x : 0.399
relative y : 0.410
unit type : Zergling
ENEMY #21:
health : 100.0%
relative x : 0.399
relative y : 0.464
unit type : Zergling
ENEMY #22:
health : 100.0%
relative x : 0.401
relative y : 0.437
unit type : Zergling
ENEMY #23:
health : 100.0%
relative x : 0.425
relative y : 0.462
unit type : Zergling
ENEMY #24:
health : 100.0%
relative x : 0.425
relative y : 0.413
unit type : Zergling

--- ORDERS FOR YOUR UNITS ---
For each of your 6 units, select one action from its list of available actions.
In the last line respond with a formatted list of integer action IDs, one for each unit.
For example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]
Make sure the action ID given to each agent is available for each agent.
-- Unit 0 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 1 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 2 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 3 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 4 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 5 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

Based on the state and available actions, provide the list of 6 action IDs for your units.
=======================================

===== LLM PROMPT (Sending to API) =====
You are an AI agent controlling 6 units in a StarCraft II scenario.
Your objective is to defeat all enemy units by issuing commands to your units.
--- CURRENT GLOBAL STATE ---
ALLY #1:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.075
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #2:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.078
unit type : Zealot
shield : 100.0%
ALLY #3:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #4:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.145
unit type : Zealot
shield : 100.0%
ALLY #5:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.142
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #6:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.144
relative y : 0.076
unit type : Zealot
shield : 100.0%
ENEMY #1:
health : 100.0%
relative x : 0.425
relative y : 0.437
unit type : Zergling
ENEMY #2:
health : 100.0%
relative x : 0.450
relative y : 0.437
unit type : Zergling
ENEMY #3:
health : 100.0%
relative x : 0.452
relative y : 0.410
unit type : Zergling
ENEMY #4:
health : 100.0%
relative x : 0.452
relative y : 0.464
unit type : Zergling
ENEMY #5:
health : 100.0%
relative x : 0.425
relative y : 0.384
unit type : Zergling
ENEMY #6:
health : 100.0%
relative x : 0.479
relative y : 0.437
unit type : Zergling
ENEMY #7:
health : 100.0%
relative x : 0.452
relative y : 0.384
unit type : Zergling
ENEMY #8:
health : 100.0%
relative x : 0.372
relative y : 0.410
unit type : Zergling
ENEMY #9:
health : 100.0%
relative x : 0.479
relative y : 0.410
unit type : Zergling
ENEMY #10:
health : 100.0%
relative x : 0.372
relative y : 0.464
unit type : Zergling
ENEMY #11:
health : 100.0%
relative x : 0.372
relative y : 0.489
unit type : Zergling
ENEMY #12:
health : 100.0%
relative x : 0.479
relative y : 0.489
unit type : Zergling
ENEMY #13:
health : 100.0%
relative x : 0.479
relative y : 0.384
unit type : Zergling
ENEMY #14:
health : 100.0%
relative x : 0.399
relative y : 0.384
unit type : Zergling
ENEMY #15:
health : 100.0%
relative x : 0.452
relative y : 0.489
unit type : Zergling
ENEMY #16:
health : 100.0%
relative x : 0.399
relative y : 0.489
unit type : Zergling
ENEMY #17:
health : 100.0%
relative x : 0.479
relative y : 0.464
unit type : Zergling
ENEMY #18:
health : 100.0%
relative x : 0.372
relative y : 0.437
unit type : Zergling
ENEMY #19:
health : 100.0%
relative x : 0.425
relative y : 0.489
unit type : Zergling
ENEMY #20:
health : 100.0%
relative x : 0.399
relative y : 0.410
unit type : Zergling
ENEMY #21:
health : 100.0%
relative x : 0.399
relative y : 0.464
unit type : Zergling
ENEMY #22:
health : 100.0%
relative x : 0.401
relative y : 0.437
unit type : Zergling
ENEMY #23:
health : 100.0%
relative x : 0.425
relative y : 0.462
unit type : Zergling
ENEMY #24:
health : 100.0%
relative x : 0.425
relative y : 0.413
unit type : Zergling

--- ORDERS FOR YOUR UNITS ---
For each of your 6 units, select one action from its list of available actions.
In the last line respond with a formatted list of integer action IDs, one for each unit.
For example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]
Make sure the act[DEBUG 09:23:23] openai message='Request to OpenAI API' method=post path=http://127.0.0.1:11434/v1/chat/completions
[DEBUG 09:23:23] openai message='Request to OpenAI API' method=post path=http://127.0.0.1:11434/v1/chat/completions
[DEBUG 09:23:23] openai message='Request to OpenAI API' method=post path=http://127.0.0.1:11434/v1/chat/completions
[DEBUG 09:23:23] openai api_version=None data='{"model": "llama2", "messages": [{"role": "user", "content": "You are an AI agent controlling 6 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.075\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.078\\nunit type : Zealot\\nshield : 100.0%\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #4:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.145\\nunit type : Zealot\\nshield : 100.0%\\nALLY #5:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.142\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #6:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.144\\nrelative y : 0.076\\nunit type : Zealot\\nshield : 100.0%\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.450\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #4:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #5:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #6:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #7:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #8:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #9:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #10:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #11:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #12:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #13:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #14:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #15:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #16:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #17:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #18:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #19:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #20:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #21:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #22:\\nhealth : 100.0%\\nrelative x : 0.401\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #23:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.462\\nunit type : Zergling\\nENEMY #24:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.413\\nunit type : Zergling\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 6 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 3 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 4 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 5 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 6 action IDs for your units."}]}' message='Post details'
[DEBUG 09:23:23] openai api_version=None data='{"model": "llama2", "messages": [{"role": "user", "content": "You are an AI agent controlling 6 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.075\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.078\\nunit type : Zealot\\nshield : 100.0%\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #4:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.145\\nunit type : Zealot\\nshield : 100.0%\\nALLY #5:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.142\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #6:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.144\\nrelative y : 0.076\\nunit type : Zealot\\nshield : 100.0%\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.450\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #4:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #5:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #6:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #7:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #8:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #9:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #10:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #11:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #12:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #13:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #14:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #15:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #16:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #17:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #18:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #19:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #20:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.410\\nunition ID given to each agent is available for each agent.
-- Unit 0 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 1 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 2 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 3 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 4 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 5 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

Based on the state and available actions, provide the list of 6 action IDs for your units.
=======================================

===== LLM PROMPT (Sending to API) =====
You are an AI agent controlling 6 units in a StarCraft II scenario.
Your objective is to defeat all enemy units by issuing commands to your units.
--- CURRENT GLOBAL STATE ---
ALLY #1:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.075
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #2:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.078
unit type : Zealot
shield : 100.0%
ALLY #3:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #4:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.109
relative y : 0.145
unit type : Zealot
shield : 100.0%
ALLY #5:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.142
relative y : 0.111
unit type : Zealot
shield : 100.0%
ALLY #6:
health : 100.0%
weapon cooldown : 0.0%
relative x : 0.144
relative y : 0.076
unit type : Zealot
shield : 100.0%
ENEMY #1:
health : 100.0%
relative x : 0.425
relative y : 0.437
unit type : Zergling
ENEMY #2:
health : 100.0%
relative x : 0.450
relative y : 0.437
unit type : Zergling
ENEMY #3:
health : 100.0%
relative x : 0.452
relative y : 0.410
unit type : Zergling
ENEMY #4:
health : 100.0%
relative x : 0.452
relative y : 0.464
unit type : Zergling
ENEMY #5:
health : 100.0%
relative x : 0.425
relative y : 0.384
unit type : Zergling
ENEMY #6:
health : 100.0%
relative x : 0.479
relative y : 0.437
unit type : Zergling
ENEMY #7:
health : 100.0%
relative x : 0.452
relative y : 0.384
unit type : Zergling
ENEMY #8:
health : 100.0%
relative x : 0.372
relative y : 0.410
unit type : Zergling
ENEMY #9:
health : 100.0%
relative x : 0.479
relative y : 0.410
unit type : Zergling
ENEMY #10:
health : 100.0%
relative x : 0.372
relative y : 0.464
unit type : Zergling
ENEMY #11:
health : 100.0%
relative x : 0.372
relative y : 0.489
unit type : Zergling
ENEMY #12:
health : 100.0%
relative x : 0.479
relative y : 0.489
unit type : Zergling
ENEMY #13:
health : 100.0%
relative x : 0.479
relative y : 0.384
unit type : Zergling
ENEMY #14:
health : 100.0%
relative x : 0.399
relative y : 0.384
unit type : Zergling
ENEMY #15:
health : 100.0%
relative x : 0.452
relative y : 0.489
unit type : Zergling
ENEMY #16:
health : 100.0%
relative x : 0.399
relative y : 0.489
unit type : Zergling
ENEMY #17:
health : 100.0%
relative x : 0.479
relative y : 0.464
unit type : Zergling
ENEMY #18:
health : 100.0%
relative x : 0.372
relative y : 0.437
unit type : Zergling
ENEMY #19:
health : 100.0%
relative x : 0.425
relative y : 0.489
unit type : Zergling
ENEMY #20:
health : 100.0%
relative x : 0.399
relative y : 0.410
unit type : Zergling
ENEMY #21:
health : 100.0%
relative x : 0.399
relative y : 0.464
unit type : Zergling
ENEMY #22:
health : 100.0%
relative x : 0.401
relative y : 0.437
unit type : Zergling
ENEMY #23:
health : 100.0%
relative x : 0.425
relative y : 0.462
unit type : Zergling
ENEMY #24:
health : 100.0%
relative x : 0.425
relative y : 0.413
unit type : Zergling

--- ORDERS FOR YOUR UNITS ---
For each of your 6 units, select one action from its list of available actions.
In the last line respond with a formatted list of integer action IDs, one for each unit.
For example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]
Make sure the action ID given to each agent is available for each agent.
-- Unit 0 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 1 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 2 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 3 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 4 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

-- Unit 5 --
Available Actions (ID: Description):
 - ID 1: stop
 - ID 2: move_north
 - ID 3: move_south
 - ID 4: move_east
 - ID 5: move_west

Based on the state and available actions, provide the list of 6 action IDs for your units.
=======================================
 type : Zergling\\nENEMY #21:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #22:\\nhealth : 100.0%\\nrelative x : 0.401\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #23:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.462\\nunit type : Zergling\\nENEMY #24:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.413\\nunit type : Zergling\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 6 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 3 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 4 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 5 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 6 action IDs for your units."}]}' message='Post details'
[DEBUG 09:23:23] openai api_version=None data='{"model": "llama2", "messages": [{"role": "user", "content": "You are an AI agent controlling 6 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.075\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.078\\nunit type : Zealot\\nshield : 100.0%\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #4:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.145\\nunit type : Zealot\\nshield : 100.0%\\nALLY #5:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.142\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #6:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.144\\nrelative y : 0.076\\nunit type : Zealot\\nshield : 100.0%\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.450\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #4:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #5:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #6:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #7:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #8:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #9:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #10:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #11:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #12:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #13:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #14:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #15:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #16:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #17:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #18:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #19:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #20:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #21:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #22:\\nhealth : 100.0%\\nrelative x : 0.401\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #23:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.462\\nunit type : Zergling\\nENEMY #24:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.413\\nunit type : Zergling\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 6 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 3 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 4 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 5 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 6 action IDs for your units."}]}' message='Post details'
[DEBUG 09:23:23] openai message='Request to OpenAI API' method=post path=http://127.0.0.1:11434/v1/chat/completions
[DEBUG 09:23:23] openai message='Request to OpenAI API' method=post path=http://127.0.0.1:11434/v1/chat/completions
[DEBUG 09:23:23] openai api_version=None data='{"model": "llama2", "messages": [{"role": "user", "content": "You are an AI agent controlling 6 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.075\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.078\\nunit type : Zealot\\nshield : 100.0%\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #4:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.145\\nunit type : Zealot\\nshield : 100.0%\\nALLY #5:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.142\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #6:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.144\\nrelative y : 0.076\\nunit type : Zealot\\nshield : 100.0%\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.450\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #4:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #5:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #6:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #7:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #8:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #9:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #10:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #11:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #12:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #13:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #14:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #15:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #16:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #17:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #18:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #19:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #20:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #21:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #22:\\nhealth : 100.0%\\nrelative x : 0.401\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #23:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.462\\nunit type : Zergling\\nENEMY #24:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.413\\nunit type : Zergling\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 6 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 3 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 4 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 5 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 6 action IDs for your units."}]}' message='Post details'
[DEBUG 09:23:23] openai api_version=None data='{"model": "llama2", "messages": [{"role": "user", "content": "You are an AI agent controlling 6 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.075\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.078\\nunit type : Zealot\\nshield : 100.0%\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #4:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.145\\nunit type : Zealot\\nshield : 100.0%\\nALLY #5:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.142\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #6:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.144\\nrelative y : 0.076\\nunit type : Zealot\\nshield : 100.0%\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.450\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #4:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #5:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #6:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #7:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #8:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #9:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #10:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #11:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #12:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #13:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #14:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #15:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #16:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #17:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #18:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #19:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #20:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #21:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #22:\\nhealth : 100.0%\\nrelative x : 0.401\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #23:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.462\\nunit type : Zergling\\nENEMY #24:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.413\\nunit type : Zergling\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 6 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 3 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 4 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 5 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 6 action IDs for your units."}]}' message='Post details'
[DEBUG 09:23:23] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 09:23:23] urllib3.connectionpool http://127.0.0.1:11434 "POST /v1/chat/completions HTTP/11" 404 117
[DEBUG 09:23:23] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 09:23:23] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 09:23:23] openai message='OpenAI API response' path=http://127.0.0.1:11434/v1/chat/completions processing_ms=None request_id=None response_code=404
[INFO 09:23:23] openai error_code=None error_message='model "llama2" not found, try pulling it first' error_param=None error_type=api_error message='OpenAI API error received' stream_error=False
Process Process-6:
[DEBUG 09:23:23] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 09:23:23] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 09:23:23] openai message='Request to OpenAI API' method=post path=http://127.0.0.1:11434/v1/chat/completions
[DEBUG 09:23:23] openai api_version=None data='{"model": "llama2", "messages": [{"role": "user", "content": "You are an AI agent controlling 6 units in a StarCraft II scenario.\\nYour objective is to defeat all enemy units by issuing commands to your units.\\n--- CURRENT GLOBAL STATE ---\\nALLY #1:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.075\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #2:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.078\\nunit type : Zealot\\nshield : 100.0%\\nALLY #3:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #4:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.109\\nrelative y : 0.145\\nunit type : Zealot\\nshield : 100.0%\\nALLY #5:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.142\\nrelative y : 0.111\\nunit type : Zealot\\nshield : 100.0%\\nALLY #6:\\nhealth : 100.0%\\nweapon cooldown : 0.0%\\nrelative x : 0.144\\nrelative y : 0.076\\nunit type : Zealot\\nshield : 100.0%\\nENEMY #1:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #2:\\nhealth : 100.0%\\nrelative x : 0.450\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #3:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #4:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #5:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #6:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #7:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #8:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #9:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #10:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #11:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #12:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #13:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #14:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.384\\nunit type : Zergling\\nENEMY #15:\\nhealth : 100.0%\\nrelative x : 0.452\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #16:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #17:\\nhealth : 100.0%\\nrelative x : 0.479\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #18:\\nhealth : 100.0%\\nrelative x : 0.372\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #19:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.489\\nunit type : Zergling\\nENEMY #20:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.410\\nunit type : Zergling\\nENEMY #21:\\nhealth : 100.0%\\nrelative x : 0.399\\nrelative y : 0.464\\nunit type : Zergling\\nENEMY #22:\\nhealth : 100.0%\\nrelative x : 0.401\\nrelative y : 0.437\\nunit type : Zergling\\nENEMY #23:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.462\\nunit type : Zergling\\nENEMY #24:\\nhealth : 100.0%\\nrelative x : 0.425\\nrelative y : 0.413\\nunit type : Zergling\\n\\n--- ORDERS FOR YOUR UNITS ---\\nFor each of your 6 units, select one action from its list of available actions.\\nIn the last line respond with a formatted list of integer action IDs, one for each unit.\\nFor example, to order agent 0, 1, 2 to perform action ID 0, 1, 5 respectively, output: [0, 1, 5]\\nMake sure the action ID given to each agent is available for each agent.\\n-- Unit 0 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 1 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 2 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 3 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 4 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\n-- Unit 5 --\\nAvailable Actions (ID: Description):\\n - ID 1: stop\\n - ID 2: move_north\\n - ID 3: move_south\\n - ID 4: move_east\\n - ID 5: move_west\\n\\nBased on the state and available actions, provide the list of 6 action IDs for your units."}]}' message='Post details'
[DEBUG 09:23:23] urllib3.util.retry Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
[DEBUG 09:23:23] urllib3.connectionpool Starting new HTTP connection (1): 127.0.0.1:11434
[DEBUG 09:23:23] urllib3.connectionpool Starting new HTTP connection (1): 127.0.0.1:11434
[DEBUG 09:23:23] urllib3.connectionpool Starting new HTTP connection (1): 127.0.0.1:11434
Traceback (most recent call last):
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 79, in _get_actions_from_llm_api
    response = openai.ChatCompletion.create(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: model "llama2" not found, try pulling it first

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/root/DRL-Final/pymarl2/src/runners/parallel_runner.py", line 233, in env_worker
    reward, terminated, env_info = env.step(actions)
  File "/root/DRL-Final/pymarl2/src/envs/starcraft/StarCraft2Env.py", line 436, in step
    llm_instruction = self.llm_agent.act(global_state_nl, avail_actions_list, n_agents, env_info)
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 104, in act
    chosen_actions = list(self._get_actions_from_llm_api(prompt, n_agents, all_agent_available_action_indices, n_total_actions))
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 92, in _get_actions_from_llm_api
    print("Parse action error!\nLLM output:",llm_output_str)
UnboundLocalError: local variable 'llm_output_str' referenced before assignment
[DEBUG 09:23:23] urllib3.connectionpool Starting new HTTP connection (1): 127.0.0.1:11434
[DEBUG 09:23:23] urllib3.connectionpool Starting new HTTP connection (1): 127.0.0.1:11434
[DEBUG 09:23:23] urllib3.connectionpool Starting new HTTP connection (1): 127.0.0.1:11434
[DEBUG 09:23:23] urllib3.connectionpool Starting new HTTP connection (1): 127.0.0.1:11434
[DEBUG 09:23:23] urllib3.connectionpool http://127.0.0.1:11434 "POST /v1/chat/completions HTTP/11" 404 117
[DEBUG 09:23:23] urllib3.connectionpool http://127.0.0.1:11434 "POST /v1/chat/completions HTTP/11" 404 117
[DEBUG 09:23:23] openai message='OpenAI API response' path=http://127.0.0.1:11434/v1/chat/completions processing_ms=None request_id=None response_code=404
[INFO 09:23:23] openai error_code=None error_message='model "llama2" not found, try pulling it first' error_param=None error_type=api_error message='OpenAI API error received' stream_error=False
[DEBUG 09:23:23] openai message='OpenAI API response' path=http://127.0.0.1:11434/v1/chat/completions processing_ms=None request_id=None response_code=404
Process Process-5:
[INFO 09:23:23] openai error_code=None error_message='model "llama2" not found, try pulling it first' error_param=None error_type=api_error message='OpenAI API error received' stream_error=False
Process Process-4:
[DEBUG 09:23:23] urllib3.connectionpool http://127.0.0.1:11434 "POST /v1/chat/completions HTTP/11" 404 117
[DEBUG 09:23:23] openai message='OpenAI API response' path=http://127.0.0.1:11434/v1/chat/completions processing_ms=None request_id=None response_code=404
[DEBUG 09:23:23] urllib3.connectionpool http://127.0.0.1:11434 "POST /v1/chat/completions HTTP/11" 404 117
[DEBUG 09:23:23] urllib3.connectionpool http://127.0.0.1:11434 "POST /v1/chat/completions HTTP/11" 404 117
[INFO 09:23:23] openai error_code=None error_message='model "llama2" not found, try pulling it first' error_param=None error_type=api_error message='OpenAI API error received' stream_error=False
Traceback (most recent call last):
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 79, in _get_actions_from_llm_api
    response = openai.ChatCompletion.create(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: model "llama2" not found, try pulling it first

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/root/DRL-Final/pymarl2/src/runners/parallel_runner.py", line 233, in env_worker
    reward, terminated, env_info = env.step(actions)
  File "/root/DRL-Final/pymarl2/src/envs/starcraft/StarCraft2Env.py", line 436, in step
    llm_instruction = self.llm_agent.act(global_state_nl, avail_actions_list, n_agents, env_info)
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 104, in act
    chosen_actions = list(self._get_actions_from_llm_api(prompt, n_agents, all_agent_available_action_indices, n_total_actions))
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 92, in _get_actions_from_llm_api
    print("Parse action error!\nLLM output:",llm_output_str)
UnboundLocalError: local variable 'llm_output_str' referenced before assignment
Process Process-3:
[DEBUG 09:23:23] urllib3.connectionpool http://127.0.0.1:11434 "POST /v1/chat/completions HTTP/11" 404 117
[DEBUG 09:23:23] openai message='OpenAI API response' path=http://127.0.0.1:11434/v1/chat/completions processing_ms=None request_id=None response_code=404
[DEBUG 09:23:23] urllib3.connectionpool http://127.0.0.1:11434 "POST /v1/chat/completions HTTP/11" 404 117
[DEBUG 09:23:23] openai message='OpenAI API response' path=http://127.0.0.1:11434/v1/chat/completions processing_ms=None request_id=None response_code=404
[INFO 09:23:23] openai error_code=None error_message='model "llama2" not found, try pulling it first' error_param=None error_type=api_error message='OpenAI API error received' stream_error=False
Traceback (most recent call last):
[INFO 09:23:23] openai error_code=None error_message='model "llama2" not found, try pulling it first' error_param=None error_type=api_error message='OpenAI API error received' stream_error=False
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 79, in _get_actions_from_llm_api
    response = openai.ChatCompletion.create(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: model "llama2" not found, try pulling it first

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/root/DRL-Final/pymarl2/src/runners/parallel_runner.py", line 233, in env_worker
    reward, terminated, env_info = env.step(actions)
  File "/root/DRL-Final/pymarl2/src/envs/starcraft/StarCraft2Env.py", line 436, in step
    llm_instruction = self.llm_agent.act(global_state_nl, avail_actions_list, n_agents, env_info)
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 104, in act
    chosen_actions = list(self._get_actions_from_llm_api(prompt, n_agents, all_agent_available_action_indices, n_total_actions))
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 92, in _get_actions_from_llm_api
    print("Parse action error!\nLLM output:",llm_output_str)
UnboundLocalError: local variable 'llm_output_str' referenced before assignment
Process Process-7:
Process Process-8:
[DEBUG 09:23:23] openai message='OpenAI API response' path=http://127.0.0.1:11434/v1/chat/completions processing_ms=None request_id=None response_code=404
[INFO 09:23:23] openai error_code=None error_message='model "llama2" not found, try pulling it first' error_param=None error_type=api_error message='OpenAI API error received' stream_error=False
[DEBUG 09:23:23] openai message='OpenAI API response' path=http://127.0.0.1:11434/v1/chat/completions processing_ms=None request_id=None response_code=404
Process Process-2:
[INFO 09:23:23] openai error_code=None error_message='model "llama2" not found, try pulling it first' error_param=None error_type=api_error message='OpenAI API error received' stream_error=False
Process Process-1:
Traceback (most recent call last):
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 79, in _get_actions_from_llm_api
    response = openai.ChatCompletion.create(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: model "llama2" not found, try pulling it first

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/root/DRL-Final/pymarl2/src/runners/parallel_runner.py", line 233, in env_worker
    reward, terminated, env_info = env.step(actions)
  File "/root/DRL-Final/pymarl2/src/envs/starcraft/StarCraft2Env.py", line 436, in step
    llm_instruction = self.llm_agent.act(global_state_nl, avail_actions_list, n_agents, env_info)
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 104, in act
    chosen_actions = list(self._get_actions_from_llm_api(prompt, n_agents, all_agent_available_action_indices, n_total_actions))
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 92, in _get_actions_from_llm_api
    print("Parse action error!\nLLM output:",llm_output_str)
UnboundLocalError: local variable 'llm_output_str' referenced before assignment
Traceback (most recent call last):
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 79, in _get_actions_from_llm_api
    response = openai.ChatCompletion.create(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: model "llama2" not found, try pulling it first

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/root/DRL-Final/pymarl2/src/runners/parallel_runner.py", line 233, in env_worker
    reward, terminated, env_info = env.step(actions)
  File "/root/DRL-Final/pymarl2/src/envs/starcraft/StarCraft2Env.py", line 436, in step
    llm_instruction = self.llm_agent.act(global_state_nl, avail_actions_list, n_agents, env_info)
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 104, in act
    chosen_actions = list(self._get_actions_from_llm_api(prompt, n_agents, all_agent_available_action_indices, n_total_actions))
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 92, in _get_actions_from_llm_api
    print("Parse action error!\nLLM output:",llm_output_str)
UnboundLocalError: local variable 'llm_output_str' referenced before assignment
Traceback (most recent call last):
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 79, in _get_actions_from_llm_api
    response = openai.ChatCompletion.create(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: model "llama2" not found, try pulling it first

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/root/DRL-Final/pymarl2/src/runners/parallel_runner.py", line 233, in env_worker
    reward, terminated, env_info = env.step(actions)
  File "/root/DRL-Final/pymarl2/src/envs/starcraft/StarCraft2Env.py", line 436, in step
    llm_instruction = self.llm_agent.act(global_state_nl, avail_actions_list, n_agents, env_info)
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 104, in act
    chosen_actions = list(self._get_actions_from_llm_api(prompt, n_agents, all_agent_available_action_indices, n_total_actions))
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 92, in _get_actions_from_llm_api
    print("Parse action error!\nLLM output:",llm_output_str)
UnboundLocalError: local variable 'llm_output_str' referenced before assignment
Traceback (most recent call last):
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 79, in _get_actions_from_llm_api
    response = openai.ChatCompletion.create(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: model "llama2" not found, try pulling it first

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/root/DRL-Final/pymarl2/src/runners/parallel_runner.py", line 233, in env_worker
    reward, terminated, env_info = env.step(actions)
  File "/root/DRL-Final/pymarl2/src/envs/starcraft/StarCraft2Env.py", line 436, in step
    llm_instruction = self.llm_agent.act(global_state_nl, avail_actions_list, n_agents, env_info)
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 104, in act
    chosen_actions = list(self._get_actions_from_llm_api(prompt, n_agents, all_agent_available_action_indices, n_total_actions))
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 92, in _get_actions_from_llm_api
    print("Parse action error!\nLLM output:",llm_output_str)
UnboundLocalError: local variable 'llm_output_str' referenced before assignment
CloseHandler: 127.0.0.1:42218 disconnected
Traceback (most recent call last):
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 79, in _get_actions_from_llm_api
    response = openai.ChatCompletion.create(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/chat_completion.py", line 25, in create
    return super().create(*args, **kwargs)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_resources/abstract/engine_api_resource.py", line 153, in create
    response, _, api_key = requestor.request(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 298, in request
    resp, got_stream = self._interpret_response(result, stream)
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 700, in _interpret_response
    self._interpret_response_line(
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/site-packages/openai/api_requestor.py", line 765, in _interpret_response_line
    raise self.handle_error_response(
openai.error.InvalidRequestError: model "llama2" not found, try pulling it first

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/root/miniconda3/envs/pysc2-env/lib/python3.8/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/root/DRL-Final/pymarl2/src/runners/parallel_runner.py", line 233, in env_worker
    reward, terminated, env_info = env.step(actions)
  File "/root/DRL-Final/pymarl2/src/envs/starcraft/StarCraft2Env.py", line 436, in step
    llm_instruction = self.llm_agent.act(global_state_nl, avail_actions_list, n_agents, env_info)
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 104, in act
    chosen_actions = list(self._get_actions_from_llm_api(prompt, n_agents, all_agent_available_action_indices, n_total_actions))
  File "/root/DRL-Final/pymarl2/src/llm/test_llm.py", line 92, in _get_actions_from_llm_api
    print("Parse action error!\nLLM output:",llm_output_str)
UnboundLocalError: local variable 'llm_output_str' referenced before assignment
CloseHandler: 127.0.0.1:55144 disconnected
CloseHandler: 127.0.0.1:52768 disconnected
CloseHandler: 127.0.0.1:43018 disconnected
CloseHandler: 127.0.0.1:41552 disconnected
CloseHandler: 127.0.0.1:37758 disconnected
CloseHandler: 127.0.0.1:55792 disconnected
CloseHandler: 127.0.0.1:57104 disconnected
