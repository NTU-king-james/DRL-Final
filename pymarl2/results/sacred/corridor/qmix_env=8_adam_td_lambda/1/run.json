{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/Users/kingjames/Desktop/\u56db\u4e0a/DRL-Final/pymarl2/src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.24.4",
      "PyYAML==5.3.1",
      "sacred==0.7.5",
      "torch==2.4.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [],
    "sources": [
      [
        "main.py",
        "_sources/main_b3ff5451593b67cd33b9ec035b3b4842.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_ce9a261c391cbeae67129d3d806d06da.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/Users/kingjames/miniconda3/envs/pymarl2/lib/python3.8/site-packages/sacred/config/captured_function.py\", line 48, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 38, in my_main\n    run_REGISTRY[_config['run']](_run, config, _log)\n",
    "  File \"/Users/kingjames/Desktop/\u56db\u4e0a/DRL-Final/pymarl2/src/run/run.py\", line 54, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/Users/kingjames/Desktop/\u56db\u4e0a/DRL-Final/pymarl2/src/run/run.py\", line 85, in run_sequential\n    runner = r_REGISTRY[args.runner](args=args, logger=logger)\n",
    "  File \"/Users/kingjames/Desktop/\u56db\u4e0a/DRL-Final/pymarl2/src/runners/parallel_runner.py\", line 29, in __init__\n    p.start()\n",
    "  File \"/Users/kingjames/miniconda3/envs/pymarl2/lib/python3.8/multiprocessing/process.py\", line 121, in start\n    self._popen = self._Popen(self)\n",
    "  File \"/Users/kingjames/miniconda3/envs/pymarl2/lib/python3.8/multiprocessing/context.py\", line 224, in _Popen\n    return _default_context.get_context().Process._Popen(process_obj)\n",
    "  File \"/Users/kingjames/miniconda3/envs/pymarl2/lib/python3.8/multiprocessing/context.py\", line 284, in _Popen\n    return Popen(process_obj)\n",
    "  File \"/Users/kingjames/miniconda3/envs/pymarl2/lib/python3.8/multiprocessing/popen_spawn_posix.py\", line 32, in __init__\n    super().__init__(process_obj)\n",
    "  File \"/Users/kingjames/miniconda3/envs/pymarl2/lib/python3.8/multiprocessing/popen_fork.py\", line 19, in __init__\n    self._launch(process_obj)\n",
    "  File \"/Users/kingjames/miniconda3/envs/pymarl2/lib/python3.8/multiprocessing/popen_spawn_posix.py\", line 47, in _launch\n    reduction.dump(process_obj, fp)\n",
    "  File \"/Users/kingjames/miniconda3/envs/pymarl2/lib/python3.8/multiprocessing/reduction.py\", line 60, in dump\n    ForkingPickler(file, protocol).dump(obj)\n",
    "  File \"/Users/kingjames/Desktop/\u56db\u4e0a/DRL-Final/pymarl2/src/runners/parallel_runner.py\", line 274, in __getstate__\n    import cloudpickle\n",
    "ModuleNotFoundError: No module named 'cloudpickle'\n"
  ],
  "heartbeat": "2025-05-26T05:54:00.238953",
  "host": {
    "ENV": {},
    "cpu": "Apple M2",
    "hostname": "chenxindeMacBook-Air.local",
    "os": [
      "Darwin",
      "macOS-15.0-arm64-arm-64bit"
    ],
    "python_version": "3.8.20"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat_interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print_config": false,
      "--priority": null,
      "--queue": false,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.map_name=corridor"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2025-05-26T05:53:59.014475",
  "status": "FAILED",
  "stop_time": "2025-05-26T05:54:00.239848"
}